<div id="modal" class="fixed inset-0 z-50 hidden items-center justify-center bg-black bg-opacity-50">
    <div class="relative h-4/5 w-3/5 rounded-2xl bg-background dark:bg-background-dark">
        <div
            id="modal-loader"
            class="absolute inset-0 flex items-center justify-center rounded-2xl bg-background dark:bg-background-dark"
        >
            <div
                class="h-8 w-8 animate-spin rounded-full border-4 border-accent border-t-transparent dark:border-accent-dark dark:border-t-transparent"
            >
            </div>
        </div>

        <button id="modal-close-button" class="absolute right-1.5 top-1.5 z-10">
            <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-6 w-6"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
            >
                <circle cx="12" cy="12" r="10" stroke="transparent" fill="white"></circle>

                <path
                    stroke="black"
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="1.5"
                    d="M15 9l-6 6m0-6l6 6"></path>
            </svg>
        </button>

        <iframe
            id="modal-iframe"
            class="h-full w-full rounded-2xl opacity-0 transition-opacity duration-300"
            onload="this.style.opacity='1'; document.getElementById('modal-loader').style.display='none';"></iframe>
    </div>
</div>

<script>
    import { createLogger, type ILogger } from '../utils/logger';

    const logger: ILogger = createLogger({ prefix: 'Modal' });

    document.addEventListener('DOMContentLoaded', function () {
        const modal = document.getElementById('modal');
        const iframe = document.getElementById('modal-iframe') as HTMLIFrameElement;
        const loader = document.getElementById('modal-loader');
        const closeButton = document.getElementById('modal-close-button');

        if (!modal || !iframe || !loader || !closeButton) {
            logger.error('Modal elements not found');
        }

        /**
         * Open the modal.
         *
         * @param src - The source URL to load into the modal.
         */
        function openModal(src: string) {
            iframe!.style.opacity = '0';
            loader!.style.display = 'flex';
            iframe!.src = src + '?inModal=1';

            modal!.classList.remove('hidden');
            modal!.classList.add('flex');

            document.body.style.overflow = 'hidden'; // prevent scrolling on the parent page
        }

        /** Close the modal. */
        function closeModal() {
            iframe!.style.opacity = '0';
            loader!.style.display = 'flex';
            iframe!.src = '';

            modal!.classList.remove('flex');
            modal!.classList.add('hidden');

            document.body.style.overflow = ''; // restore the parent page scrolling
        }

        /** Close the modal when the close button is clicked. */
        closeButton!.addEventListener('click', function () {
            closeModal();
        });

        /** Close the modal when the modal is clicked. */
        modal!.addEventListener('click', function (e) {
            if (e.target === modal) {
                closeModal();
            }
        });

        // Open the modal when a link is clicked.
        const links = document.querySelectorAll('a[href^="/"]:not([href="/"])');

        links.forEach(function (link) {
            link.addEventListener(
                'click',
                function (e) {
                    e.preventDefault();
                    e.stopPropagation();

                    const href = link.getAttribute('href');
                    const scrollPos = window.scrollY;

                    if (href) {
                        openModal(href);
                        window.scrollTo(0, scrollPos);
                    } else {
                        logger.warn(`No href found for the link ${link}`);
                    }
                },
                { capture: true }
            );
        });

        // Close the modal when a message is received from the parent window.
        window.addEventListener('message', function (event) {
            if (event.origin !== window.location.origin) return;

            const data = event.data;

            if (data && data.type === 'navigate' && data.url) {
                closeModal();

                window.location.href = data.url;

                if (data.shouldScroll) {
                    window.addEventListener('load', () => {
                        const element = document.querySelector(new URL(data.url).hash);
                        element?.scrollIntoView({ behavior: 'smooth' });
                    });
                }
            }
        });
    });
</script>
