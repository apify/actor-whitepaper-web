<script>
    import { createLogger } from '../utils/logger';
    import type { ILogger } from '../types';

    const logger: ILogger = createLogger({ prefix: 'SmoothScroll' });

    /**
     * Handles click events on anchor elements.
     *
     * Intercepts clicks on anchor elements, checks if the href is a local link with a hash fragment, and smoothly
     * scrolls to the target element on the same page without reloading the page. It also updates the browser history
     * with the new hash.
     *
     * @param {MouseEvent} e - The mouse event triggered by the click.
     */
    const handleAnchorClick = (e: MouseEvent) => {
        const target = e.target as Element;
        const link = target.closest('a');

        if (link?.href) {
            try {
                const url = new URL(link.href);
                const isLocalLink = url.origin === window.location.origin;
                const hasHash = url.hash.length > 0;

                if (isLocalLink && hasHash) {
                    e.preventDefault();

                    const targetId = url.hash.substring(1);
                    const targetElement = document.getElementById(targetId);

                    if (targetElement) {
                        logger.info(`Scrolling to target: ${targetId}`);

                        window.scrollTo({
                            top: targetElement.offsetTop,
                            behavior: 'smooth'
                        });

                        history.pushState(null, '', url.hash);
                    } else {
                        logger.warn(`Target element not found: ${targetId}`);
                    }
                }
            } catch (error) {
                logger.error('Failed to handle anchor click:', error);
            }
        }
    };

    document.addEventListener('click', handleAnchorClick);
</script>
